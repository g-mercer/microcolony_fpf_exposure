theme(axis.title = element_text(size = 8)) +
geom_hline(aes(yintercept = median(residue_measurement_ugkg)), color= y) +
theme(legend.title = element_blank()) +
z
return(plot)
}
pollen_day_3_plot_median <- plot_function_1(pollen_day_3, "firebrick4", theme(axis.title.x = element_blank()))
nectar_day_2_plot_median <- plot_function_1(nectar_day_2, "steelblue", theme() )
library(cowplot)
plot_row <- plot_grid(pollen_day_1_plot, pollen_day_3_plot_median, nectar_day_1_plot, nectar_day_2_plot_median, labels = "auto", label_size = 12)
# now add the title
title <- ggdraw() +
draw_label(
"Residue Measurements for Pollen and Nectar From Forager Bees Over Time",
fontface = 'bold',
x = 0,
hjust = 0
) +
theme(
# add margin on the left of the drawing canvas,
# so title is aligned with left edge of first plot
plot.margin = margin(0, 0, 0, 7)
)
plot_grid(
title, plot_row,
ncol = 1,
# rel_heights values control vertical title margins
rel_heights = c(0.1, 1)
)
rm(list=ls())
knitr::opts_chunk$set(echo = FALSE, message = FALSE, warning = FALSE)
pollen <- read.csv(file = "pollen_residues_ugkg.csv")
nectar <- read.csv(file = "nectar_residues_ugkg.csv")
# add matrix factor
pollen$matrix <- "pollen"
nectar$matrix <- "nectar"
pollen_nectar <- rbind(pollen, nectar)
pollen_nectar$matrix <- as.factor(pollen_nectar$matrix)
# filter pollen so only timepoints after 24h are kept. Then show this in days not hours
pollen_day_1 <- pollen [pollen$DALA_h > 23,]
pollen_day_3 <- pollen [pollen$DALA_h > 24,]
pollen$DALA_h <- pollen$DALA_h/24
pollen_day_1$DALA_h <- pollen_day_1$DALA_h/24
pollen_day_3$DALA_h <- pollen_day_3$DALA_h/24
library(tidyverse)
library(ggplot2)
plot_function <- function(x, y, z) {
plot <- ggplot(data = x, aes(x = DALA_h, y = residue_measurement_ugkg)) +
geom_point(aes(color = matrix, group = DALA_h, position = "dodge"), alpha = 0.4) +
stat_summary(fun = "mean", geom = "point", aes(color = matrix)) +
stat_summary(fun.data = mean_se, geom = "errorbar", width = 0.1, aes(color = matrix)) +
theme_bw() +
scale_x_continuous(breaks=seq(-1,10,1)) +
scale_color_manual(values = y) +
xlab("Days After Last Application") +
ylab("Residue Level (ppb)") +
theme(axis.title = element_text(size = 8)) +
theme(legend.position = "none") +
z
return(plot)
}
mean(pollen [pollen$DALA_h > 1,] $residue_measurement_ugkg)
median(pollen [pollen$DALA_h > 1,] $residue_measurement_ugkg)
nectar_day_1 <- nectar [nectar$DALA_h > 23,]
nectar_day_2 <- nectar [nectar$DALA_h > 25,]
nectar$DALA_h <- nectar$DALA_h/24
nectar_day_1$DALA_h <- nectar_day_1$DALA_h/24
nectar_day_2$DALA_h <- nectar_day_2$DALA_h/24
mean(nectar [nectar$DALA_h > 1,] $residue_measurement_ugkg)
median(nectar [nectar$DALA_h > 1,] $residue_measurement_ugkg)
pollen_day_1_plot <- plot_function(pollen_day_1, "firebrick4", theme(axis.title.x = element_blank()))
nectar_day_1_plot <- plot_function(nectar_day_1, "steelblue", theme())
plot_function_1 <- function(x, y, z) {
plot <- ggplot(data = x, aes(x = DALA_h, y = residue_measurement_ugkg)) +
geom_point(aes(color = matrix, group = DALA_h, position = "dodge"), alpha = 0.4) +
stat_summary(fun = "mean", geom = "point", aes(color = matrix)) +
stat_summary(fun.data = mean_se, geom = "errorbar", width = 0.1, aes(color = matrix)) +
theme_bw() +
scale_x_continuous(breaks=seq(-1,10,1)) +
scale_color_manual(values = y) +
xlab("Days After Last Application") +
ylab("Residue Level (ppb)") +
theme(axis.title = element_text(size = 8)) +
geom_hline(aes(yintercept = median(residue_measurement_ugkg)), color= y) +
theme(legend.title = element_blank()) +
z
return(plot)
}
pollen_day_3_plot_median <- plot_function_1(pollen_day_3, "firebrick4", theme(axis.title.x = element_blank()))
nectar_day_2_plot_median <- plot_function_1(nectar_day_2, "steelblue", theme() )
library(cowplot)
plot_row <- plot_grid(pollen_day_1_plot, pollen_day_3_plot_median, nectar_day_1_plot, nectar_day_2_plot_median, labels = "auto", label_size = 12)
# now add the title
title <- ggdraw() +
draw_label(
"Residue Measurements for Pollen and Nectar From Forager Bees Over Time",
fontface = 'bold',
x = 0,
hjust = 0
) +
theme(
# add margin on the left of the drawing canvas,
# so title is aligned with left edge of first plot
plot.margin = margin(0, 0, 0, 7)
)
plot_grid(
title, plot_row,
ncol = 1,
# rel_heights values control vertical title margins
rel_heights = c(0.1, 1)
)
rm(list=ls())
knitr::opts_chunk$set(echo = FALSE, message = FALSE, warning = FALSE)
pollen <- read.csv(file = "pollen_residues_ugkg.csv")
nectar <- read.csv(file = "nectar_residues_ugkg.csv")
# add matrix factor
pollen$matrix <- "pollen"
nectar$matrix <- "nectar"
pollen_nectar <- rbind(pollen, nectar)
pollen_nectar$matrix <- as.factor(pollen_nectar$matrix)
# filter pollen so only timepoints after 24h are kept. Then show this in days not hours
pollen_day_1 <- pollen [pollen$DALA_h > 23,]
pollen_day_3 <- pollen [pollen$DALA_h > 24,]
pollen$DALA_h <- pollen$DALA_h/24
pollen_day_1$DALA_h <- pollen_day_1$DALA_h/24
pollen_day_3$DALA_h <- pollen_day_3$DALA_h/24
library(tidyverse)
library(ggplot2)
plot_function <- function(x, y, z) {
plot <- ggplot(data = x, aes(x = DALA_h, y = residue_measurement_ugkg)) +
geom_point(aes(color = matrix, group = DALA_h, position = "dodge"), alpha = 0.4) +
stat_summary(fun = "mean", geom = "point", aes(color = matrix)) +
stat_summary(fun.data = mean_se, geom = "errorbar", width = 0.1, aes(color = matrix)) +
theme_bw() +
scale_x_continuous(breaks=seq(-1,10,1)) +
scale_color_manual(values = y) +
xlab("Days After Last Application") +
ylab("Residue Level (ppb)") +
theme(axis.title = element_text(size = 8)) +
theme(axis.text=element_text(size = 8)) +
theme(legend.position = "none") +
z
return(plot)
}
mean(pollen [pollen$DALA_h > 1,] $residue_measurement_ugkg)
median(pollen [pollen$DALA_h > 1,] $residue_measurement_ugkg)
nectar_day_1 <- nectar [nectar$DALA_h > 23,]
nectar_day_2 <- nectar [nectar$DALA_h > 25,]
nectar$DALA_h <- nectar$DALA_h/24
nectar_day_1$DALA_h <- nectar_day_1$DALA_h/24
nectar_day_2$DALA_h <- nectar_day_2$DALA_h/24
mean(nectar [nectar$DALA_h > 1,] $residue_measurement_ugkg)
median(nectar [nectar$DALA_h > 1,] $residue_measurement_ugkg)
pollen_day_1_plot <- plot_function(pollen_day_1, "firebrick4", theme(axis.title.x = element_blank()))
nectar_day_1_plot <- plot_function(nectar_day_1, "steelblue", theme())
plot_function_1 <- function(x, y, z) {
plot <- ggplot(data = x, aes(x = DALA_h, y = residue_measurement_ugkg)) +
geom_point(aes(color = matrix, group = DALA_h, position = "dodge"), alpha = 0.4) +
stat_summary(fun = "mean", geom = "point", aes(color = matrix)) +
stat_summary(fun.data = mean_se, geom = "errorbar", width = 0.1, aes(color = matrix)) +
theme_bw() +
scale_x_continuous(breaks=seq(-1,10,1)) +
scale_color_manual(values = y) +
xlab("Days After Last Application") +
ylab("Residue Level (ppb)") +
theme(axis.title = element_text(size = 8)) +
geom_hline(aes(yintercept = median(residue_measurement_ugkg)), color= y) +
theme(legend.title = element_blank()) +
z
return(plot)
}
pollen_day_3_plot_median <- plot_function_1(pollen_day_3, "firebrick4", theme(axis.title.x = element_blank()))
nectar_day_2_plot_median <- plot_function_1(nectar_day_2, "steelblue", theme() )
library(cowplot)
plot_row <- plot_grid(pollen_day_1_plot, pollen_day_3_plot_median, nectar_day_1_plot, nectar_day_2_plot_median, labels = "auto", label_size = 12)
# now add the title
title <- ggdraw() +
draw_label(
"Residue Measurements for Pollen and Nectar From Forager Bees Over Time",
fontface = 'bold',
x = 0,
hjust = 0
) +
theme(
# add margin on the left of the drawing canvas,
# so title is aligned with left edge of first plot
plot.margin = margin(0, 0, 0, 7)
)
plot_grid(
title, plot_row,
ncol = 1,
# rel_heights values control vertical title margins
rel_heights = c(0.1, 1)
)
library(tidyverse)
library(ggplot2)
plot_function <- function(x, y, z) {
plot <- ggplot(data = x, aes(x = DALA_h, y = residue_measurement_ugkg)) +
geom_point(aes(color = matrix, group = DALA_h, position = "dodge"), alpha = 0.4) +
stat_summary(fun = "mean", geom = "point", aes(color = matrix)) +
stat_summary(fun.data = mean_se, geom = "errorbar", width = 0.1, aes(color = matrix)) +
theme_bw() +
scale_x_continuous(breaks=seq(-1,10,1)) +
scale_color_manual(values = y) +
xlab("Days After Last Application") +
ylab("Residue Level (ppb)") +
theme(axis.title = element_text(size = 8)) +
theme(axis.text = element_text(size = 1)) +
theme(legend.position = "none") +
z
return(plot)
}
library(cowplot)
plot_row <- plot_grid(pollen_day_1_plot, pollen_day_3_plot_median, nectar_day_1_plot, nectar_day_2_plot_median, labels = "auto", label_size = 12)
# now add the title
title <- ggdraw() +
draw_label(
"Residue Measurements for Pollen and Nectar From Forager Bees Over Time",
fontface = 'bold',
x = 0,
hjust = 0
) +
theme(
# add margin on the left of the drawing canvas,
# so title is aligned with left edge of first plot
plot.margin = margin(0, 0, 0, 7)
)
plot_grid(
title, plot_row,
ncol = 1,
# rel_heights values control vertical title margins
rel_heights = c(0.1, 1)
)
rm(list=ls())
knitr::opts_chunk$set(echo = FALSE, message = FALSE, warning = FALSE)
pollen <- read.csv(file = "pollen_residues_ugkg.csv")
nectar <- read.csv(file = "nectar_residues_ugkg.csv")
# add matrix factor
pollen$matrix <- "pollen"
nectar$matrix <- "nectar"
pollen_nectar <- rbind(pollen, nectar)
pollen_nectar$matrix <- as.factor(pollen_nectar$matrix)
# filter pollen so only timepoints after 24h are kept. Then show this in days not hours
pollen_day_1 <- pollen [pollen$DALA_h > 23,]
pollen_day_3 <- pollen [pollen$DALA_h > 24,]
pollen$DALA_h <- pollen$DALA_h/24
pollen_day_1$DALA_h <- pollen_day_1$DALA_h/24
pollen_day_3$DALA_h <- pollen_day_3$DALA_h/24
library(tidyverse)
library(ggplot2)
plot_function <- function(x, y, z) {
plot <- ggplot(data = x, aes(x = DALA_h, y = residue_measurement_ugkg)) +
geom_point(aes(color = matrix, group = DALA_h, position = "dodge"), alpha = 0.4) +
stat_summary(fun = "mean", geom = "point", aes(color = matrix)) +
stat_summary(fun.data = mean_se, geom = "errorbar", width = 0.1, aes(color = matrix)) +
theme_bw() +
scale_x_continuous(breaks=seq(-1,10,1)) +
scale_color_manual(values = y) +
xlab("Days After Last Application") +
ylab("Residue Level (ppb)") +
theme(axis.title = element_text(size = 8)) +
theme(axis.text.y = element_text(size = 5)) +
theme(legend.position = "none") +
z
return(plot)
}
mean(pollen [pollen$DALA_h > 1,] $residue_measurement_ugkg)
median(pollen [pollen$DALA_h > 1,] $residue_measurement_ugkg)
nectar_day_1 <- nectar [nectar$DALA_h > 23,]
nectar_day_2 <- nectar [nectar$DALA_h > 25,]
nectar$DALA_h <- nectar$DALA_h/24
nectar_day_1$DALA_h <- nectar_day_1$DALA_h/24
nectar_day_2$DALA_h <- nectar_day_2$DALA_h/24
mean(nectar [nectar$DALA_h > 1,] $residue_measurement_ugkg)
median(nectar [nectar$DALA_h > 1,] $residue_measurement_ugkg)
pollen_day_1_plot <- plot_function(pollen_day_1, "firebrick4", theme(axis.title.x = element_blank()))
nectar_day_1_plot <- plot_function(nectar_day_1, "steelblue", theme())
plot_function_1 <- function(x, y, z) {
plot <- ggplot(data = x, aes(x = DALA_h, y = residue_measurement_ugkg)) +
geom_point(aes(color = matrix, group = DALA_h, position = "dodge"), alpha = 0.4) +
stat_summary(fun = "mean", geom = "point", aes(color = matrix)) +
stat_summary(fun.data = mean_se, geom = "errorbar", width = 0.1, aes(color = matrix)) +
theme_bw() +
scale_x_continuous(breaks=seq(-1,10,1)) +
scale_color_manual(values = y) +
xlab("Days After Last Application") +
ylab("Residue Level (ppb)") +
theme(axis.title = element_text(size = 8)) +
geom_hline(aes(yintercept = median(residue_measurement_ugkg)), color= y) +
theme(legend.title = element_blank()) +
z
return(plot)
}
pollen_day_3_plot_median <- plot_function_1(pollen_day_3, "firebrick4", theme(axis.title.x = element_blank()))
nectar_day_2_plot_median <- plot_function_1(nectar_day_2, "steelblue", theme() )
library(cowplot)
plot_row <- plot_grid(pollen_day_1_plot, pollen_day_3_plot_median, nectar_day_1_plot, nectar_day_2_plot_median, labels = "auto", label_size = 12)
# now add the title
title <- ggdraw() +
draw_label(
"Residue Measurements for Pollen and Nectar From Forager Bees Over Time",
fontface = 'bold',
x = 0,
hjust = 0
) +
theme(
# add margin on the left of the drawing canvas,
# so title is aligned with left edge of first plot
plot.margin = margin(0, 0, 0, 7)
)
plot_grid(
title, plot_row,
ncol = 1,
# rel_heights values control vertical title margins
rel_heights = c(0.1, 1)
)
rm(list=ls())
knitr::opts_chunk$set(echo = FALSE, message = FALSE, warning = FALSE)
pollen <- read.csv(file = "pollen_residues_ugkg.csv")
nectar <- read.csv(file = "nectar_residues_ugkg.csv")
# add matrix factor
pollen$matrix <- "pollen"
nectar$matrix <- "nectar"
pollen_nectar <- rbind(pollen, nectar)
pollen_nectar$matrix <- as.factor(pollen_nectar$matrix)
# filter pollen so only timepoints after 24h are kept. Then show this in days not hours
pollen_day_1 <- pollen [pollen$DALA_h > 23,]
pollen_day_3 <- pollen [pollen$DALA_h > 24,]
pollen$DALA_h <- pollen$DALA_h/24
pollen_day_1$DALA_h <- pollen_day_1$DALA_h/24
pollen_day_3$DALA_h <- pollen_day_3$DALA_h/24
library(tidyverse)
library(ggplot2)
plot_function <- function(x, y, z) {
plot <- ggplot(data = x, aes(x = DALA_h, y = residue_measurement_ugkg)) +
geom_point(aes(color = matrix, group = DALA_h, position = "dodge"), alpha = 0.4) +
stat_summary(fun = "mean", geom = "point", aes(color = matrix)) +
stat_summary(fun.data = mean_se, geom = "errorbar", width = 0.1, aes(color = matrix)) +
theme_bw() +
scale_x_continuous(breaks=seq(-1,10,1)) +
scale_color_manual(values = y) +
xlab("Days After Last Application") +
ylab("Residue Level (ppb)") +
theme(axis.title = element_text(size = 8)) +
theme(legend.position = "none") +
z
return(plot)
}
mean(pollen [pollen$DALA_h > 1,] $residue_measurement_ugkg)
median(pollen [pollen$DALA_h > 1,] $residue_measurement_ugkg)
nectar_day_1 <- nectar [nectar$DALA_h > 23,]
nectar_day_2 <- nectar [nectar$DALA_h > 25,]
nectar$DALA_h <- nectar$DALA_h/24
nectar_day_1$DALA_h <- nectar_day_1$DALA_h/24
nectar_day_2$DALA_h <- nectar_day_2$DALA_h/24
mean(nectar [nectar$DALA_h > 1,] $residue_measurement_ugkg)
median(nectar [nectar$DALA_h > 1,] $residue_measurement_ugkg)
pollen_day_1_plot <- plot_function(pollen_day_1, "firebrick4", theme(axis.title.x = element_blank()))
nectar_day_1_plot <- plot_function(nectar_day_1, "steelblue", theme())
plot_function_1 <- function(x, y, z) {
plot <- ggplot(data = x, aes(x = DALA_h, y = residue_measurement_ugkg)) +
geom_point(aes(color = matrix, group = DALA_h, position = "dodge"), alpha = 0.4) +
stat_summary(fun = "mean", geom = "point", aes(color = matrix)) +
stat_summary(fun.data = mean_se, geom = "errorbar", width = 0.1, aes(color = matrix)) +
theme_bw() +
scale_x_continuous(breaks=seq(-1,10,1)) +
scale_color_manual(values = y) +
xlab("Days After Last Application") +
ylab("Residue Level (ppb)") +
theme(axis.title = element_text(size = 8)) +
geom_hline(aes(yintercept = median(residue_measurement_ugkg)), color= y) +
theme(legend.title = element_blank()) +
z
return(plot)
}
pollen_day_3_plot_median <- plot_function_1(pollen_day_3, "firebrick4", theme(axis.title.x = element_blank()))
nectar_day_2_plot_median <- plot_function_1(nectar_day_2, "steelblue", theme() )
library(cowplot)
plot_row <- plot_grid(pollen_day_1_plot, pollen_day_3_plot_median, nectar_day_1_plot, nectar_day_2_plot_median, labels = "auto", label_size = 12)
# now add the title
title <- ggdraw() +
draw_label(
"Residue Measurements for Pollen and Nectar From Forager Bees Over Time",
fontface = 'bold',
x = 0,
hjust = 0
) +
theme(
# add margin on the left of the drawing canvas,
# so title is aligned with left edge of first plot
plot.margin = margin(0, 0, 0, 7)
)
plot_grid(
title, plot_row,
ncol = 1,
# rel_heights values control vertical title margins
rel_heights = c(0.1, 1)
)
rm(list=ls())
knitr::opts_chunk$set(echo = FALSE, message = FALSE, warning = FALSE)
pollen <- read.csv(file = "pollen_residues_ugkg.csv")
nectar <- read.csv(file = "nectar_residues_ugkg.csv")
# add matrix factor
pollen$matrix <- "pollen"
nectar$matrix <- "nectar"
pollen_nectar <- rbind(pollen, nectar)
pollen_nectar$matrix <- as.factor(pollen_nectar$matrix)
# filter pollen so only timepoints after 24h are kept. Then show this in days not hours
pollen_day_1 <- pollen [pollen$DALA_h > 23,]
pollen_day_3 <- pollen [pollen$DALA_h > 24,]
pollen$DALA_h <- pollen$DALA_h/24
pollen_day_1$DALA_h <- pollen_day_1$DALA_h/24
pollen_day_3$DALA_h <- pollen_day_3$DALA_h/24
library(tidyverse)
library(ggplot2)
plot_function <- function(x, y, z) {
plot <- ggplot(data = x, aes(x = DALA_h, y = residue_measurement_ugkg)) +
geom_point(aes(color = matrix, group = DALA_h, position = "dodge"), alpha = 0.4) +
stat_summary(fun = "mean", geom = "point", aes(color = matrix)) +
stat_summary(fun.data = mean_se, geom = "errorbar", width = 0.1, aes(color = matrix)) +
theme_bw() +
scale_x_continuous(breaks=seq(-1,10,1)) +
scale_color_manual(values = y) +
xlab("Days After Last Application") +
ylab("Residue Level (ppb)") +
theme(axis.title = element_text(size = 8)) +
theme(legend.position = "none") +
z
return(plot)
}
mean(pollen [pollen$DALA_h > 1,] $residue_measurement_ugkg)
median(pollen [pollen$DALA_h > 1,] $residue_measurement_ugkg)
nectar_day_1 <- nectar [nectar$DALA_h > 23,]
nectar_day_2 <- nectar [nectar$DALA_h > 25,]
nectar$DALA_h <- nectar$DALA_h/24
nectar_day_1$DALA_h <- nectar_day_1$DALA_h/24
nectar_day_2$DALA_h <- nectar_day_2$DALA_h/24
mean(nectar [nectar$DALA_h > 1,] $residue_measurement_ugkg)
median(nectar [nectar$DALA_h > 1,] $residue_measurement_ugkg)
pollen_day_1_plot <- plot_function(pollen_day_1, "firebrick4", theme(axis.title.x = element_blank()))
nectar_day_1_plot <- plot_function(nectar_day_1, "steelblue", theme())
plot_function_1 <- function(x, y, z) {
plot <- ggplot(data = x, aes(x = DALA_h, y = residue_measurement_ugkg)) +
geom_point(aes(color = matrix, group = DALA_h, position = "dodge"), alpha = 0.4) +
stat_summary(fun = "mean", geom = "point", aes(color = matrix)) +
stat_summary(fun.data = mean_se, geom = "errorbar", width = 0.1, aes(color = matrix)) +
theme_bw() +
scale_x_continuous(breaks=seq(-1,10,1)) +
scale_color_manual(values = y) +
xlab("Days After Last Application") +
ylab("Residue Level (ppb)") +
theme(axis.title = element_text(size = 8)) +
geom_hline(aes(yintercept = median(residue_measurement_ugkg)), color= y) +
theme(legend.title = element_blank()) +
z
return(plot)
}
pollen_day_3_plot_median <- plot_function_1(pollen_day_3, "firebrick4", theme(axis.title.x = element_blank()))
nectar_day_2_plot_median <- plot_function_1(nectar_day_2, "steelblue", theme() )
library(cowplot)
plot_row <- plot_grid(pollen_day_1_plot, pollen_day_3_plot_median, nectar_day_1_plot, nectar_day_2_plot_median, labels = "auto", label_size = 12)
# now add the title
title <- ggdraw() +
draw_label(
"Residue Measurements for Pollen and Nectar From Forager Bees Over Time",
fontface = 'bold',
x = 0,
hjust = 0
) +
theme(
# add margin on the left of the drawing canvas,
# so title is aligned with left edge of first plot
plot.margin = margin(0, 0, 0, 7)
)
combined_plots <- plot_grid(
title, plot_row,
ncol = 1,
# rel_heights values control vertical title margins
rel_heights = c(0.1, 1)
)
pdf(file = "/Users/guy/Documents/phd/RHUL/formulation-vs-active-ingredient-project/dosage-regime-data/combined_plots.pdf",   # The directory you want to save the file in
width = 6, # The width of the plot in inches
height = 4) # The height of the plot in inches
combined_plots
dev.off()
library(cowplot)
plot_row <- plot_grid(pollen_day_1_plot, pollen_day_3_plot_median, nectar_day_1_plot, nectar_day_2_plot_median, labels = "auto", label_size = 12)
# now add the title
title <- ggdraw() +
draw_label(
"Residue Measurements for Pollen and Nectar From Forager Bees Over Time",
fontface = 'bold',
x = 0,
hjust = 0
) +
theme(
# add margin on the left of the drawing canvas,
# so title is aligned with left edge of first plot
plot.margin = margin(0, 0, 0, 7)
)
combined_plots <- plot_grid(
title, plot_row,
ncol = 1,
# rel_heights values control vertical title margins
rel_heights = c(0.1, 1)
)
pdf(file = "/Users/guy/Documents/phd/RHUL/formulation-vs-active-ingredient-project/dosage-regime-data/combined_plots.pdf",   # The directory you want to save the file in
width = 6, # The width of the plot in inches
height = 4) # The height of the plot in inches
combined_plots
dev.off()
combined_plots
